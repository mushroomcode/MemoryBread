单例池（一级缓存）：这是存放已经完整经历了生命周期的Bean对象的地方。
一旦Bean完成了实例化、属性填充等所有步骤，它就会被放入这个单例池中，供其他Bean使用。

早期暴露（二级缓存）：有时，一个Bean可能还没有完成其所有的初始化步骤
（例如，它的属性可能还没有被填充），但其他Bean已经需要引用它。这时，Spring会把这个“半成品”的Bean放入二级缓存中。这样，其他Bean就可以引用到这个Bean，尽管它还没有完全准备好。

工厂缓存（三级缓存）：这个缓存存放的是创建Bean的工厂。
当Spring开始创建一个Bean时，它会先创建一个对应的工厂，并将这个工厂放入三级缓存。
这样，如果其他Bean需要引用这个还在创建中的Bean，Spring就可以通过这个工厂来生成一个“早期暴露”的Bean。

假设有两个Bean，A和B，它们相互依赖。当Spring开始创建A时，发现A需要B，于是去创建B。
但在创建B的过程中，发现B也需要A。这时，如果直接从一级缓存中找A，是找不到的，因为A还在创建中。
然后，Spring会检查二级缓存，如果也没有，它会去三级缓存中找。
在三级缓存中，Spring找到了A的工厂，于是通过这个工厂生成了一个“早期暴露”的A，
并将其放入二级缓存中，并从三级缓存中删除。接着，B完成其初始化并放入一级缓存。
最后，回到A的创建流程，此时B已经准备好了，可以从一级缓存中拿到B，完成A的创建。

